openapi: 3.0.0
info:
  title: User Management API
  description: API para la gestión de usuarios
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Servidor local
  - url: https://laschicas-api-production.up.railway.app/
    description: Servidor en producción
paths:
  /api/users:
    get:
      summary: Obtiene una lista paginada de usuarios
      parameters:
        - name: limit
          in: query
          description: Límite de usuarios por página
          schema:
            type: integer
        - name: page
          in: query
          description: Página actual
          schema:
            type: integer
        - name: role
          in: query
          description: Filtrar por rol
          schema:
            type: string
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '404':
          description: No se encontraron usuarios

    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    $ref: '#/components/schemas/User'
        '400':
          description: Error al crear el usuario

  /api/users/{uid}:
    put:
      summary: Actualiza un usuario
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado

    delete:
      summary: Elimina un usuario por ID
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado

  /api/users/restore:
    post:
      summary: Envía un correo para restaurar contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '302':
          description: Redirige a la página de confirmación

  /api/users/restorecallback:
    post:
      summary: Cambia la contraseña del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '302':
          description: Redirige a la página de perfil

  /api/users/premium/{uid}:
    post:
      summary: Actualiza el rol del usuario a premium o user
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        '200':
          description: Rol del usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    type: string

  /api/users/{uid}/documents:
    post:
      summary: Subir documentos para un usuario
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                docs:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Documentos subidos exitosamente
        '400':
          description: Error al subir documentos

  /api/users/:
    delete:
      summary: Elimina usuarios inactivos
      responses:
        '200':
          description: Usuarios eliminados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
    NewUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
